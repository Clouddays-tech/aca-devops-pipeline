trigger:
  branches:
    include:
    - main
  paths:
    include:
    - azure-pipelines.yaml
    exclude:
    - Readme.md

resources:
- repo: self

variables:
  IMAGE_NAME: clouddays101/album-backend-api
  CONTAINERAPPS_APP: my-container-app
  CONTAINERAPPS_ENVIRONMENT: aca-environment
  RESOURCE_GROUP: rg-aca-devops
  TAG: '$(Build.BuildId)'
  runBuild: 'true' # Set to 'false' if you want to skip the build

stages:
- stage: Build
  condition: eq(variables['runBuild'], 'true')
  displayName: Build and push image
  jobs:
  - job: Build
    displayName: BUILD
    pool:
      vmImage: ubuntu-latest
    steps:

    - task: Docker@2
      displayName: Build an image
      inputs:
        command: build
        dockerfile: '$(Build.SourcesDirectory)/backend_api/backend_api_csharp/Dockerfile'
        repository: $(IMAGE_NAME)
        tags: $(TAG)

    - task: Docker@2
      displayName: Push image to Docker Hub
      inputs:
        containerRegistry: 'dockerhub-sc'
        repository: $(IMAGE_NAME)
        command: 'push'
        tags: '$(TAG)'

- stage: Deploy
  dependsOn: Build
  condition: always() # Run deploy only if build stage is completed
  displayName: Deploy to Container Apps
  jobs:
  - job: Deploy
    displayName: DEPLOY
    pool:
      vmImage: ubuntu-latest
    steps:

    - task: AzureContainerApps@1
      displayName: Deploy new container version to ACA
      inputs:
        azureSubscription: 'azure-sc'
        imageToDeploy: '$(IMAGE_NAME):$(TAG)'
        containerAppName: '$(CONTAINERAPPS_APP)'
        resourceGroup: '$(RESOURCE_GROUP)'
        containerAppEnvironment: '$(CONTAINERAPPS_ENVIRONMENT)'
        targetPort: '3500'
        ingress: 'external'
